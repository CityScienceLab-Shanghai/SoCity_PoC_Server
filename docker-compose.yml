version: '3.1'

services:
  postgres:
    container_name: database
    image: postgres
    ports:
      - "${POSTGRES_PORT}:5432"
    healthcheck:
      test: ["CMD","/bin/bash","/healthcheck.sh"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}

    volumes:
      - ./data/:/var/lib/postgresql/data/
      - ./config/postgres/schema.pgsql:/docker-entrypoint-initdb.d/init.sql
      - ./config/postgres/healthcheck.sh:/healthcheck.sh
  casdoor:
    container_name: authorization
    image: casbin/casdoor:latest
    entrypoint: /bin/sh -c './server --createDatabase=true'
    ports:
      - "${CASDOOR_PORT}:8884"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      RUNNING_IN_DOCKER: "true"
      dataSourceName: "user=${POSTGRES_USER} password=${POSTGRES_PASSWORD} host=localhost port=${POSTGRES_PORT} sslmode=disable dbname=${POSTGRES_DB}"

    volumes:
      - ./config/casdoor/app.conf:/conf/app.conf

  hardhat:
    container_name: contract
    image: node:16
    working_dir: /usr/src/app
    ports:
      - "${HARDHAT_PORT}:8545"

    volumes:
        - ./contract:/usr/src/app
        - ./backend/assets/contracts:/usr/src/artifacts/contracts

    environment:
      NODE_ENV : development
      HARDHAT_PORT : ${HARDHAT_PORT}
      ALCHEMY_PRIVATE_KEY : ${ALCHEMY_PRIVATE_KEY}
      GOERLI_RPC_URL : ${GOERLI_RPC_URL}

    command: "npm run contract"

    
  dev:
    container_name: dev_backend
    image: node:16
    working_dir: /usr/src/app
    ports:
      - "${NEST_PORT}:3000"
      - "9299:9229"

    volumes:
        - ./backend:/usr/src/app
        
    depends_on:
      - postgres
      - casdoor
      - hardhat

    environment:
      NODE_ENV : development
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PORT: ${POSTGRES_PORT}
      CASDOOR_CLIENT_ID: ${CASDOOR_CLIENT_ID}
      CASDOOR_CLIENT_SECRET: ${CASDOOR_CLIENT_SECRET}
      CASDOOR_ORG_NAME: ${CASDOOR_ORG_NAME}
      CASDOOR_APP_NAME: ${CASDOOR_APP_NAME}
      CASDOOR_CERTIFICATE: ${CASDOOR_CERTIFICATE}


    command: "npm run docker:dev"
  prod:
    container_name: prod_backend
    image: node:16
    working_dir: /usr/src/app
    ports:
      - "${NEST_PORT}:3000"
    
    volumes:
        - ./backend:/usr/src/app

    depends_on:
      - postgres
      - casdoor

    environment:
      NODE_ENV : production
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PORT: ${POSTGRES_PORT}
      CASDOOR_CLIENT_ID: ${CASDOOR_CLIENT_ID}
      CASDOOR_CLIENT_SECRET: ${CASDOOR_CLIENT_SECRET}
      CASDOOR_ORG_NAME: ${CASDOOR_ORG_NAME}
      CASDOOR_APP_NAME: ${CASDOOR_APP_NAME}
      CASDOOR_CERTIFICATE: ${CASDOOR_CERTIFICATE}

    command: "npm run docker:prod"